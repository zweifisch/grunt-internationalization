// Generated by CoffeeScript 1.8.0

/*
 * grunt-internationalization
 * https://github.com/zf/grunt-internationalization
 *
 * Copyright (c) 2014 Feng Zhou
 * Licensed under the MIT license.
 *
 */

(function() {
  var pth;

  pth = require("path");

  module.exports = function(grunt) {
    return grunt.registerMultiTask('internationalization', 'grunt plugin for internationalization', function() {
      var Translator, angular, bundleAsAngularModule, bundleAsJavascript, defaults, javascript, lang, path, translator, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3, _results;
      defaults = {
        angular: {
          module: 'i18n',
          service: 'i18n',
          filter: 'translate',
          nsSeparator: ':',
          defaultNs: 'defualt',
          path: 'locales'
        },
        javascript: {
          exportAs: 'i18n',
          path: 'locales'
        }
      };
      angular = grunt.config.get(["internationalization", "angular"]);
      if (angular) {
        angular = grunt.util._.merge({}, defaults.angular, angular);
        _ref = require('internationalization'), Translator = _ref.Translator, bundleAsAngularModule = _ref.bundleAsAngularModule;
        translator = new Translator;
        translator.load(angular.path);
        _ref1 = translator.speaks();
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          lang = _ref1[_i];
          path = pth.join(angular.output, "" + lang + ".js");
          grunt.file.write(path, bundleAsAngularModule({
            resource: translator.langs[lang],
            lang: lang,
            nsSeparator: angular.nsSeparator,
            defaultNs: angular.defaultNs,
            module: angular.module,
            service: angular.service,
            filter: angular.filter
          }));
          grunt.log.writeln("File " + path + " created.");
        }
      }
      javascript = grunt.config.get(["internationalization", "javascript"], javascript);
      if (javascript) {
        javascript = grunt.util._.merge({}, defaults.javascript, javascript);
        _ref2 = require('internationalization'), Translator = _ref2.Translator, bundleAsJavascript = _ref2.bundleAsJavascript;
        translator = new Translator;
        translator.load(javascript.path);
        _ref3 = translator.speaks();
        _results = [];
        for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {
          lang = _ref3[_j];
          path = pth.join(javascript.output, "" + lang + ".js");
          grunt.file.write(path, bundleAsJavascript(translator.langs[lang], lang, javascript.exportAs));
          _results.push(grunt.log.writeln("File " + path + " created."));
        }
        return _results;
      }
    });
  };

}).call(this);
